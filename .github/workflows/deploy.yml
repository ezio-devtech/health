name: Deploy
on:
  workflow_run:
    workflows: [Build]
    types: [completed]
    branches: [main]
jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Download artifacts'
        uses: actions/github-script@v5
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "medplum-dist"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/medplum-dist.zip`, Buffer.from(download.data));
      - name: 'Unzip artifacts'
        run: unzip medplum-dist.zip -d packages
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Deploy
        run: ./scripts/cicd-deploy.sh
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
          DOCKER_SERVER: ${{ secrets.DOCKER_SERVER }}
          ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
          ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
