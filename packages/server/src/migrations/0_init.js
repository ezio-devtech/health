/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

export async function up(knex) {

  await knex.schema.createTable('Account', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('name');
    t.text('owner');
    t.text('patient');
    t.text('period');
    t.text('status');
    t.specificType('subject', 'text[]');
    t.text('type');
  });

  await knex.schema.createTable('Account_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ActivityDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('ActivityDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('AdverseEvent', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('actuality');
    t.specificType('category', 'text[]');
    t.text('date');
    t.text('event');
    t.text('location');
    t.text('recorder');
    t.text('resultingcondition');
    t.text('seriousness');
    t.text('severity');
    t.specificType('study', 'text[]');
    t.text('subject');
    t.text('substance');
  });

  await knex.schema.createTable('AdverseEvent_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('AllergyIntolerance', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('asserter');
    t.specificType('category', 'text[]');
    t.text('clinicalStatus');
    t.text('code');
    t.text('criticality');
    t.text('date');
    t.text('lastDate');
    t.text('manifestation');
    t.text('onset');
    t.text('patient');
    t.text('recorder');
    t.text('route');
    t.text('severity');
    t.text('type');
    t.text('verificationStatus');
  });

  await knex.schema.createTable('AllergyIntolerance_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Appointment', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('actor');
    t.text('appointmentType');
    t.text('basedOn');
    t.text('date');
    t.text('location');
    t.text('partStatus');
    t.text('patient');
    t.text('practitioner');
    t.text('reasonCode');
    t.text('reasonReference');
    t.text('serviceCategory');
    t.text('serviceType');
    t.specificType('slot', 'text[]');
    t.specificType('specialty', 'text[]');
    t.text('status');
    t.text('supportingInfo');
  });

  await knex.schema.createTable('Appointment_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('AppointmentResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('actor');
    t.text('appointment');
    t.text('location');
    t.text('partStatus');
    t.text('patient');
    t.text('practitioner');
  });

  await knex.schema.createTable('AppointmentResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('AuditEvent', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('action');
    t.text('address');
    t.specificType('agent', 'text[]');
    t.text('agentName');
    t.text('agentRole');
    t.text('altid');
    t.text('date');
    t.specificType('entity', 'text[]');
    t.text('entityName');
    t.text('entityRole');
    t.text('entityType');
    t.text('outcome');
    t.text('patient');
    t.text('policy');
    t.text('site');
    t.text('source');
    t.specificType('subtype', 'text[]');
    t.text('type');
  });

  await knex.schema.createTable('AuditEvent_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Basic', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('author');
    t.text('code');
    t.text('created');
    t.text('patient');
    t.text('subject');
  });

  await knex.schema.createTable('Basic_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Binary', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('Binary_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('BiologicallyDerivedProduct', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('BiologicallyDerivedProduct_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('BodyStructure', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('location');
    t.text('morphology');
    t.text('patient');
  });

  await knex.schema.createTable('BodyStructure_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Bundle', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composition');
    t.text('message');
    t.text('timestamp');
    t.text('type');
  });

  await knex.schema.createTable('Bundle_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CapabilityStatement', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.text('fhirversion');
    t.specificType('format', 'text[]');
    t.text('guide');
    t.specificType('jurisdiction', 'text[]');
    t.text('mode');
    t.text('name');
    t.text('publisher');
    t.text('resource');
    t.text('resourceProfile');
    t.text('securityService');
    t.text('software');
    t.text('status');
    t.text('supportedProfile');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('CapabilityStatement_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CarePlan', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.text('activityCode');
    t.text('activityDate');
    t.text('activityReference');
    t.text('basedOn');
    t.text('careTeam');
    t.specificType('category', 'text[]');
    t.text('condition');
    t.text('encounter');
    t.specificType('goal', 'text[]');
    t.text('instantiatesCanonical');
    t.text('instantiatesUri');
    t.text('intent');
    t.text('partOf');
    t.text('performer');
    t.specificType('replaces', 'text[]');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('CarePlan_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CareTeam', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.specificType('category', 'text[]');
    t.text('encounter');
    t.specificType('participant', 'text[]');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('CareTeam_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CatalogEntry', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('CatalogEntry_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ChargeItem', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.specificType('account', 'text[]');
    t.text('code');
    t.text('context');
    t.text('enteredDate');
    t.text('enterer');
    t.text('factorOverride');
    t.text('occurrence');
    t.text('patient');
    t.text('performerActor');
    t.text('performerFunction');
    t.text('performingOrganization');
    t.text('priceOverride');
    t.text('quantity');
    t.text('requestingOrganization');
    t.specificType('service', 'text[]');
    t.text('subject');
  });

  await knex.schema.createTable('ChargeItem_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ChargeItemDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('ChargeItemDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Claim', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('careTeam');
    t.text('created');
    t.text('detailUdi');
    t.text('encounter');
    t.text('enterer');
    t.text('facility');
    t.text('insurer');
    t.text('itemUdi');
    t.text('patient');
    t.text('payee');
    t.text('priority');
    t.text('procedureUdi');
    t.text('provider');
    t.text('status');
    t.text('subdetailUdi');
    t.text('use');
  });

  await knex.schema.createTable('Claim_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ClaimResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('created');
    t.text('disposition');
    t.text('insurer');
    t.text('outcome');
    t.text('patient');
    t.text('paymentDate');
    t.text('request');
    t.text('requestor');
    t.text('status');
    t.text('use');
  });

  await knex.schema.createTable('ClaimResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ClinicalImpression', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.text('assessor');
    t.text('encounter');
    t.text('findingCode');
    t.text('findingRef');
    t.specificType('investigation', 'text[]');
    t.text('previous');
    t.specificType('problem', 'text[]');
    t.text('status');
    t.text('subject');
    t.text('supportingInfo');
  });

  await knex.schema.createTable('ClinicalImpression_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CodeSystem', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('code');
    t.text('contentMode');
    t.text('language');
    t.text('supplements');
    t.text('system');
  });

  await knex.schema.createTable('CodeSystem_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Communication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('basedOn');
    t.specificType('category', 'text[]');
    t.text('encounter');
    t.text('instantiatesCanonical');
    t.text('instantiatesUri');
    t.specificType('medium', 'text[]');
    t.text('partOf');
    t.text('patient');
    t.text('received');
    t.specificType('recipient', 'text[]');
    t.text('sender');
    t.text('sent');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('Communication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CommunicationRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('authored');
    t.text('basedOn');
    t.specificType('category', 'text[]');
    t.text('encounter');
    t.text('groupIdentifier');
    t.specificType('medium', 'text[]');
    t.text('occurrence');
    t.text('patient');
    t.text('priority');
    t.specificType('recipient', 'text[]');
    t.specificType('replaces', 'text[]');
    t.text('requester');
    t.text('sender');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('CommunicationRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CompartmentDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('code');
    t.specificType('resource', 'text[]');
  });

  await knex.schema.createTable('CompartmentDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Composition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.text('type');
    t.specificType('attester', 'text[]');
    t.specificType('author', 'text[]');
    t.specificType('category', 'text[]');
    t.text('confidentiality');
    t.text('context');
    t.text('encounter');
    t.text('entry');
    t.text('period');
    t.text('relatedId');
    t.text('relatedRef');
    t.specificType('section', 'text[]');
    t.text('status');
    t.text('subject');
    t.text('title');
  });

  await knex.schema.createTable('Composition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ConceptMap', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('dependson');
    t.text('other');
    t.text('product');
    t.text('source');
    t.text('sourceCode');
    t.text('sourceSystem');
    t.text('sourceUri');
    t.text('target');
    t.text('targetCode');
    t.text('targetSystem');
    t.text('targetUri');
  });

  await knex.schema.createTable('ConceptMap_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Condition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('patient');
    t.text('abatementAge');
    t.text('abatementDate');
    t.text('abatementString');
    t.text('asserter');
    t.text('bodySite');
    t.specificType('category', 'text[]');
    t.text('clinicalStatus');
    t.text('encounter');
    t.specificType('evidence', 'text[]');
    t.text('evidenceDetail');
    t.text('onsetAge');
    t.text('onsetDate');
    t.text('onsetInfo');
    t.text('recordedDate');
    t.text('severity');
    t.specificType('stage', 'text[]');
    t.text('subject');
    t.text('verificationStatus');
  });

  await knex.schema.createTable('Condition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Consent', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.text('action');
    t.text('actor');
    t.specificType('category', 'text[]');
    t.text('consentor');
    t.text('data');
    t.specificType('organization', 'text[]');
    t.text('period');
    t.text('purpose');
    t.text('scope');
    t.text('securityLabel');
    t.text('sourceReference');
    t.text('status');
  });

  await knex.schema.createTable('Consent_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Contract', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('authority', 'text[]');
    t.specificType('domain', 'text[]');
    t.text('instantiates');
    t.text('issued');
    t.text('patient');
    t.specificType('signer', 'text[]');
    t.text('status');
    t.specificType('subject', 'text[]');
    t.text('url');
  });

  await knex.schema.createTable('Contract_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Coverage', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('beneficiary');
    t.text('classType');
    t.text('classValue');
    t.text('dependent');
    t.text('patient');
    t.specificType('payor', 'text[]');
    t.text('policyHolder');
    t.text('status');
    t.text('subscriber');
    t.text('type');
  });

  await knex.schema.createTable('Coverage_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CoverageEligibilityRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('created');
    t.text('enterer');
    t.text('facility');
    t.text('patient');
    t.text('provider');
    t.text('status');
  });

  await knex.schema.createTable('CoverageEligibilityRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CoverageEligibilityResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('created');
    t.text('disposition');
    t.text('insurer');
    t.text('outcome');
    t.text('patient');
    t.text('request');
    t.text('requestor');
    t.text('status');
  });

  await knex.schema.createTable('CoverageEligibilityResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DetectedIssue', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('author');
    t.text('code');
    t.text('identified');
    t.specificType('implicated', 'text[]');
  });

  await knex.schema.createTable('DetectedIssue_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Device', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('deviceName');
    t.text('location');
    t.text('manufacturer');
    t.text('model');
    t.text('organization');
    t.text('patient');
    t.text('status');
    t.text('type');
    t.text('udiCarrier');
    t.text('udiDi');
    t.text('url');
  });

  await knex.schema.createTable('Device_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DeviceDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('parent');
    t.text('type');
  });

  await knex.schema.createTable('DeviceDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DeviceMetric', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('category');
    t.text('parent');
    t.text('source');
    t.text('type');
  });

  await knex.schema.createTable('DeviceMetric_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DeviceRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('patient');
    t.text('encounter');
    t.text('authoredOn');
    t.text('basedOn');
    t.text('device');
    t.text('eventDate');
    t.text('groupIdentifier');
    t.text('instantiatesCanonical');
    t.text('instantiatesUri');
    t.specificType('insurance', 'text[]');
    t.text('intent');
    t.text('performer');
    t.text('priorRequest');
    t.text('requester');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('DeviceRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DeviceUseStatement', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('device');
    t.text('subject');
  });

  await knex.schema.createTable('DeviceUseStatement_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DiagnosticReport', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('date');
    t.text('patient');
    t.text('encounter');
    t.text('basedOn');
    t.specificType('category', 'text[]');
    t.text('conclusion');
    t.text('issued');
    t.specificType('media', 'text[]');
    t.specificType('performer', 'text[]');
    t.specificType('result', 'text[]');
    t.text('resultsInterpreter');
    t.specificType('specimen', 'text[]');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('DiagnosticReport_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DocumentManifest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('type');
    t.specificType('author', 'text[]');
    t.text('created');
    t.text('description');
    t.text('item');
    t.specificType('recipient', 'text[]');
    t.text('relatedId');
    t.text('relatedRef');
    t.text('source');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('DocumentManifest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DocumentReference', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('type');
    t.text('encounter');
    t.text('authenticator');
    t.specificType('author', 'text[]');
    t.specificType('category', 'text[]');
    t.text('contenttype');
    t.text('custodian');
    t.text('date');
    t.text('description');
    t.text('event');
    t.text('facility');
    t.text('format');
    t.text('language');
    t.text('location');
    t.text('period');
    t.text('related');
    t.text('relatesto');
    t.text('relation');
    t.text('securityLabel');
    t.text('setting');
    t.text('status');
    t.text('subject');
    t.text('relationship');
  });

  await knex.schema.createTable('DocumentReference_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EffectEvidenceSynthesis', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('EffectEvidenceSynthesis_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Encounter', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.specificType('type', 'text[]');
    t.specificType('account', 'text[]');
    t.specificType('appointment', 'text[]');
    t.text('basedOn');
    t.text('class');
    t.specificType('diagnosis', 'text[]');
    t.text('episodeOfCare');
    t.text('length');
    t.specificType('location', 'text[]');
    t.text('locationPeriod');
    t.text('partOf');
    t.specificType('participant', 'text[]');
    t.text('participantType');
    t.text('practitioner');
    t.text('reasonCode');
    t.text('reasonReference');
    t.text('serviceProvider');
    t.text('specialArrangement');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('Encounter_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Endpoint', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('connectionType');
    t.text('name');
    t.text('organization');
    t.text('payloadType');
    t.text('status');
  });

  await knex.schema.createTable('Endpoint_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EnrollmentRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('EnrollmentRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EnrollmentResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('request');
    t.text('status');
  });

  await knex.schema.createTable('EnrollmentResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EpisodeOfCare', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.specificType('type', 'text[]');
    t.text('careManager');
    t.text('condition');
    t.text('incomingReferral');
    t.text('organization');
    t.text('status');
  });

  await knex.schema.createTable('EpisodeOfCare_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EventDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('EventDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Evidence', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('Evidence_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EvidenceVariable', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('EvidenceVariable_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ExampleScenario', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('ExampleScenario_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ExplanationOfBenefit', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('careTeam');
    t.text('claim');
    t.text('coverage');
    t.text('created');
    t.text('detailUdi');
    t.text('disposition');
    t.text('encounter');
    t.text('enterer');
    t.text('facility');
    t.text('itemUdi');
    t.text('patient');
    t.text('payee');
    t.text('procedureUdi');
    t.text('provider');
    t.text('status');
    t.text('subdetailUdi');
  });

  await knex.schema.createTable('ExplanationOfBenefit_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('FamilyMemberHistory', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('date');
    t.text('patient');
    t.text('instantiatesCanonical');
    t.text('instantiatesUri');
    t.text('relationship');
    t.text('sex');
    t.text('status');
  });

  await knex.schema.createTable('FamilyMemberHistory_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Flag', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.text('encounter');
    t.text('author');
    t.text('subject');
  });

  await knex.schema.createTable('Flag_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Goal', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('achievementStatus');
    t.specificType('category', 'text[]');
    t.text('lifecycleStatus');
    t.text('startDate');
    t.text('subject');
    t.text('targetDate');
  });

  await knex.schema.createTable('Goal_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('GraphDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('start');
  });

  await knex.schema.createTable('GraphDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Group', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('actual');
    t.specificType('characteristic', 'text[]');
    t.text('code');
    t.text('exclude');
    t.text('managingEntity');
    t.specificType('member', 'text[]');
    t.text('type');
    t.text('value');
    t.text('characteristicValue');
  });

  await knex.schema.createTable('Group_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('GuidanceResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('patient');
    t.text('request');
    t.text('subject');
  });

  await knex.schema.createTable('GuidanceResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('HealthcareService', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
    t.specificType('characteristic', 'text[]');
    t.text('coverageArea');
    t.specificType('endpoint', 'text[]');
    t.specificType('location', 'text[]');
    t.text('name');
    t.text('organization');
    t.specificType('program', 'text[]');
    t.text('serviceCategory');
    t.text('serviceType');
    t.specificType('specialty', 'text[]');
  });

  await knex.schema.createTable('HealthcareService_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ImagingStudy', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('basedon');
    t.text('bodysite');
    t.text('dicomClass');
    t.text('encounter');
    t.specificType('endpoint', 'text[]');
    t.text('instance');
    t.specificType('interpreter', 'text[]');
    t.specificType('modality', 'text[]');
    t.text('performer');
    t.text('reason');
    t.text('referrer');
    t.specificType('series', 'text[]');
    t.text('started');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('ImagingStudy_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Immunization', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.text('location');
    t.text('lotNumber');
    t.text('manufacturer');
    t.specificType('performer', 'text[]');
    t.specificType('reaction', 'text[]');
    t.text('reactionDate');
    t.text('reasonCode');
    t.text('reasonReference');
    t.text('series');
    t.text('status');
    t.text('statusReason');
    t.text('targetDisease');
    t.text('vaccineCode');
  });

  await knex.schema.createTable('Immunization_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ImmunizationEvaluation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('doseStatus');
    t.text('immunizationEvent');
    t.text('patient');
    t.text('status');
    t.text('targetDisease');
  });

  await knex.schema.createTable('ImmunizationEvaluation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ImmunizationRecommendation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('information');
    t.text('patient');
    t.text('status');
    t.text('support');
    t.text('targetDisease');
    t.text('vaccineType');
  });

  await knex.schema.createTable('ImmunizationRecommendation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ImplementationGuide', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('dependsOn');
    t.text('experimental');
    t.specificType('global', 'text[]');
    t.text('resource');
  });

  await knex.schema.createTable('ImplementationGuide_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('InsurancePlan', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('administeredBy');
    t.specificType('endpoint', 'text[]');
    t.text('name');
    t.text('ownedBy');
    t.text('phonetic');
    t.text('status');
    t.specificType('type', 'text[]');
  });

  await knex.schema.createTable('InsurancePlan_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Invoice', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('account');
    t.text('date');
    t.text('issuer');
    t.specificType('participant', 'text[]');
    t.text('participantRole');
    t.text('patient');
    t.text('recipient');
    t.text('status');
    t.text('subject');
    t.text('totalgross');
    t.text('totalnet');
    t.text('type');
  });

  await knex.schema.createTable('Invoice_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Library', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('contentType');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('type');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('Library_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Linkage', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('author');
    t.specificType('item', 'text[]');
    t.text('source');
  });

  await knex.schema.createTable('Linkage_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('List', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('date');
    t.text('patient');
    t.text('encounter');
    t.text('emptyReason');
    t.text('item');
    t.text('notes');
    t.text('source');
    t.text('status');
    t.text('subject');
    t.text('title');
  });

  await knex.schema.createTable('List_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Location', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('endpoint', 'text[]');
    t.text('name');
    t.text('near');
    t.text('operationalStatus');
    t.text('organization');
    t.text('partof');
    t.text('status');
    t.specificType('type', 'text[]');
  });

  await knex.schema.createTable('Location_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Measure', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('Measure_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MeasureReport', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('evaluatedResource');
    t.text('measure');
    t.text('patient');
    t.text('period');
    t.text('reporter');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('MeasureReport_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Media', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('basedOn');
    t.text('created');
    t.text('device');
    t.text('encounter');
    t.text('modality');
    t.text('operator');
    t.text('patient');
    t.text('site');
    t.text('status');
    t.text('subject');
    t.text('type');
    t.text('view');
  });

  await knex.schema.createTable('Media_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Medication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('code');
    t.text('expirationDate');
    t.text('form');
    t.specificType('ingredient', 'text[]');
    t.text('ingredientCode');
    t.text('lotNumber');
    t.text('manufacturer');
    t.text('status');
  });

  await knex.schema.createTable('Medication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationAdministration', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('patient');
    t.text('context');
    t.specificType('device', 'text[]');
    t.text('effectiveTime');
    t.text('medication');
    t.specificType('performer', 'text[]');
    t.text('reasonGiven');
    t.text('reasonNotGiven');
    t.text('request');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('MedicationAdministration_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationDispense', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('patient');
    t.text('medication');
    t.text('status');
    t.text('context');
    t.text('destination');
    t.specificType('performer', 'text[]');
    t.text('prescription');
    t.specificType('receiver', 'text[]');
    t.text('responsibleparty');
    t.text('subject');
    t.text('type');
    t.text('whenhandedover');
    t.text('whenprepared');
  });

  await knex.schema.createTable('MedicationDispense_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationKnowledge', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('classification');
    t.text('classificationType');
    t.text('code');
    t.text('doseform');
    t.specificType('ingredient', 'text[]');
    t.text('ingredientCode');
    t.text('manufacturer');
    t.text('monitoringProgramName');
    t.text('monitoringProgramType');
    t.specificType('monograph', 'text[]');
    t.text('monographType');
    t.text('sourceCost');
    t.text('status');
  });

  await knex.schema.createTable('MedicationKnowledge_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('patient');
    t.text('medication');
    t.text('status');
    t.text('authoredon');
    t.specificType('category', 'text[]');
    t.text('date');
    t.text('encounter');
    t.text('intendedDispenser');
    t.text('intendedPerformer');
    t.text('intendedPerformertype');
    t.text('intent');
    t.text('priority');
    t.text('requester');
    t.text('subject');
  });

  await knex.schema.createTable('MedicationRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationStatement', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('patient');
    t.text('medication');
    t.text('status');
    t.text('category');
    t.text('context');
    t.text('effective');
    t.text('partOf');
    t.text('source');
    t.text('subject');
  });

  await knex.schema.createTable('MedicationStatement_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProduct', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('name', 'text[]');
    t.text('nameLanguage');
  });

  await knex.schema.createTable('MedicinalProduct_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductAuthorization', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('country', 'text[]');
    t.text('holder');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('MedicinalProductAuthorization_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductContraindication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'text[]');
  });

  await knex.schema.createTable('MedicinalProductContraindication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductIndication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'text[]');
  });

  await knex.schema.createTable('MedicinalProductIndication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductIngredient', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('MedicinalProductIngredient_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductInteraction', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'text[]');
  });

  await knex.schema.createTable('MedicinalProductInteraction_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductManufactured', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('MedicinalProductManufactured_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductPackaged', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'text[]');
  });

  await knex.schema.createTable('MedicinalProductPackaged_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductPharmaceutical', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('route');
    t.text('targetSpecies');
  });

  await knex.schema.createTable('MedicinalProductPharmaceutical_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductUndesirableEffect', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'text[]');
  });

  await knex.schema.createTable('MedicinalProductUndesirableEffect_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MessageDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('category');
    t.text('event');
    t.specificType('focus', 'text[]');
    t.specificType('parent', 'text[]');
  });

  await knex.schema.createTable('MessageDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MessageHeader', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('author');
    t.text('code');
    t.specificType('destination', 'text[]');
    t.text('destinationUri');
    t.text('enterer');
    t.text('event');
    t.specificType('focus', 'text[]');
    t.text('receiver');
    t.text('responseId');
    t.text('responsible');
    t.text('sender');
    t.text('source');
    t.text('sourceUri');
    t.text('target');
  });

  await knex.schema.createTable('MessageHeader_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MolecularSequence', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('chromosome');
    t.text('patient');
    t.text('referenceseqid');
    t.text('type');
    t.text('variantEnd');
    t.text('variantStart');
    t.text('windowEnd');
    t.text('windowStart');
    t.text('chromosomeVariantCoordinate');
    t.text('chromosomeWindowCoordinate');
    t.text('referenceseqidVariantCoordinate');
    t.text('referenceseqidWindowCoordinate');
  });

  await knex.schema.createTable('MolecularSequence_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('NamingSystem', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.specificType('contact', 'text[]');
    t.text('idType');
    t.text('kind');
    t.text('period');
    t.text('responsible');
    t.text('telecom');
    t.text('type');
    t.text('value');
  });

  await knex.schema.createTable('NamingSystem_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('NutritionOrder', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('encounter');
    t.text('additive');
    t.text('datetime');
    t.text('formula');
    t.text('instantiatesCanonical');
    t.text('instantiatesUri');
    t.text('oraldiet');
    t.text('provider');
    t.text('status');
    t.specificType('supplement', 'text[]');
  });

  await knex.schema.createTable('NutritionOrder_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Observation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('date');
    t.text('patient');
    t.text('encounter');
    t.text('basedOn');
    t.specificType('category', 'text[]');
    t.text('comboCode');
    t.text('comboDataAbsentReason');
    t.text('comboValueConcept');
    t.text('comboValueQuantity');
    t.text('componentCode');
    t.text('componentDataAbsentReason');
    t.text('componentValueConcept');
    t.text('componentValueQuantity');
    t.text('dataAbsentReason');
    t.text('derivedFrom');
    t.text('device');
    t.specificType('focus', 'text[]');
    t.text('hasMember');
    t.text('method');
    t.text('partOf');
    t.specificType('performer', 'text[]');
    t.text('specimen');
    t.text('status');
    t.text('subject');
    t.text('valueConcept');
    t.text('valueDate');
    t.text('valueQuantity');
    t.text('valueString');
    t.text('codeValueConcept');
    t.text('codeValueDate');
    t.text('codeValueQuantity');
    t.text('codeValueString');
    t.text('comboCodeValueConcept');
    t.text('comboCodeValueQuantity');
    t.text('componentCodeValueConcept');
    t.text('componentCodeValueQuantity');
  });

  await knex.schema.createTable('Observation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ObservationDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('ObservationDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('OperationDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('base');
    t.text('code');
    t.text('inputProfile');
    t.text('instance');
    t.text('kind');
    t.text('outputProfile');
    t.text('system');
    t.text('type');
  });

  await knex.schema.createTable('OperationDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('OperationOutcome', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('OperationOutcome_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Organization', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
    t.specificType('endpoint', 'text[]');
    t.text('name');
    t.text('partof');
    t.text('phonetic');
    t.specificType('type', 'text[]');
  });

  await knex.schema.createTable('Organization_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('OrganizationAffiliation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
    t.text('date');
    t.specificType('endpoint', 'text[]');
    t.specificType('location', 'text[]');
    t.specificType('network', 'text[]');
    t.text('participatingOrganization');
    t.text('primaryOrganization');
    t.text('role');
    t.text('service');
    t.specificType('specialty', 'text[]');
  });

  await knex.schema.createTable('OrganizationAffiliation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Parameters', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('Parameters_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Patient', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.boolean('active');
    t.text('birthdate');
    t.text('deathDate');
    t.text('deceased');
    t.text('gender');
    t.text('generalPractitioner');
    t.text('language');
    t.specificType('link', 'text[]');
    t.text('organization');
    t.text('phonetic');
  });

  await knex.schema.createTable('Patient_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PaymentNotice', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('created');
    t.text('paymentStatus');
    t.text('provider');
    t.text('request');
    t.text('response');
    t.text('status');
  });

  await knex.schema.createTable('PaymentNotice_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PaymentReconciliation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('created');
    t.text('disposition');
    t.text('outcome');
    t.text('paymentIssuer');
    t.text('request');
    t.text('requestor');
    t.text('status');
  });

  await knex.schema.createTable('PaymentReconciliation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Person', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('birthdate');
    t.text('gender');
    t.text('phonetic');
    t.specificType('link', 'text[]');
    t.text('organization');
    t.text('patient');
    t.text('practitioner');
    t.text('relatedperson');
  });

  await knex.schema.createTable('Person_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PlanDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('definition');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('type');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('PlanDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Practitioner', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('gender');
    t.text('phonetic');
    t.boolean('active');
    t.specificType('communication', 'text[]');
  });

  await knex.schema.createTable('Practitioner_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PractitionerRole', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
    t.text('date');
    t.specificType('endpoint', 'text[]');
    t.specificType('location', 'text[]');
    t.text('organization');
    t.text('practitioner');
    t.text('role');
    t.text('service');
    t.specificType('specialty', 'text[]');
  });

  await knex.schema.createTable('PractitionerRole_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Procedure', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('date');
    t.text('patient');
    t.text('encounter');
    t.text('basedOn');
    t.text('category');
    t.text('instantiatesCanonical');
    t.text('instantiatesUri');
    t.text('location');
    t.text('partOf');
    t.specificType('performer', 'text[]');
    t.text('reasonCode');
    t.text('reasonReference');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('Procedure_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Provenance', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.specificType('agent', 'text[]');
    t.text('agentRole');
    t.text('agentType');
    t.specificType('entity', 'text[]');
    t.text('location');
    t.text('patient');
    t.text('recorded');
    t.text('signatureType');
    t.specificType('target', 'text[]');
    t.text('when');
  });

  await knex.schema.createTable('Provenance_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Questionnaire', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('code', 'text[]');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('definition');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('subjectType');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('Questionnaire_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('QuestionnaireResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('author');
    t.text('authored');
    t.text('basedOn');
    t.text('encounter');
    t.text('partOf');
    t.text('patient');
    t.text('questionnaire');
    t.text('source');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('QuestionnaireResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('RelatedPerson', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('birthdate');
    t.text('gender');
    t.text('phonetic');
    t.boolean('active');
    t.text('patient');
    t.specificType('relationship', 'text[]');
  });

  await knex.schema.createTable('RelatedPerson_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('RequestGroup', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('author');
    t.text('authored');
    t.text('code');
    t.text('encounter');
    t.text('groupIdentifier');
    t.text('instantiatesCanonical');
    t.text('instantiatesUri');
    t.text('intent');
    t.text('participant');
    t.text('patient');
    t.text('priority');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('RequestGroup_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ResearchDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('ResearchDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ResearchElementDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('composedOf');
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('dependsOn');
    t.text('derivedFrom');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('predecessor');
    t.text('publisher');
    t.text('status');
    t.text('successor');
    t.text('title');
    t.specificType('topic', 'text[]');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('ResearchElementDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ResearchStudy', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('category', 'text[]');
    t.text('date');
    t.specificType('focus', 'text[]');
    t.specificType('keyword', 'text[]');
    t.specificType('location', 'text[]');
    t.text('partof');
    t.text('principalinvestigator');
    t.specificType('protocol', 'text[]');
    t.specificType('site', 'text[]');
    t.text('sponsor');
    t.text('status');
    t.text('title');
  });

  await knex.schema.createTable('ResearchStudy_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ResearchSubject', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('individual');
    t.text('patient');
    t.text('status');
    t.text('study');
  });

  await knex.schema.createTable('ResearchSubject_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('RiskAssessment', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('patient');
    t.text('encounter');
    t.text('condition');
    t.text('method');
    t.text('performer');
    t.text('probability');
    t.text('risk');
    t.text('subject');
  });

  await knex.schema.createTable('RiskAssessment_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('RiskEvidenceSynthesis', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.text('effective');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('RiskEvidenceSynthesis_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Schedule', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.boolean('active');
    t.specificType('actor', 'text[]');
    t.text('date');
    t.text('serviceCategory');
    t.text('serviceType');
    t.specificType('specialty', 'text[]');
  });

  await knex.schema.createTable('Schedule_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SearchParameter', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.specificType('base', 'text[]');
    t.text('code');
    t.specificType('component', 'text[]');
    t.text('derivedFrom');
    t.specificType('target', 'text[]');
    t.text('type');
  });

  await knex.schema.createTable('SearchParameter_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ServiceRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('code');
    t.text('patient');
    t.text('encounter');
    t.text('authored');
    t.text('basedOn');
    t.text('bodySite');
    t.specificType('category', 'text[]');
    t.text('instantiatesCanonical');
    t.text('instantiatesUri');
    t.text('intent');
    t.text('occurrence');
    t.specificType('performer', 'text[]');
    t.text('performerType');
    t.text('priority');
    t.specificType('replaces', 'text[]');
    t.text('requester');
    t.text('requisition');
    t.specificType('specimen', 'text[]');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('ServiceRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Slot', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('appointmentType');
    t.text('schedule');
    t.text('serviceCategory');
    t.text('serviceType');
    t.specificType('specialty', 'text[]');
    t.text('start');
    t.text('status');
  });

  await knex.schema.createTable('Slot_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Specimen', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('accession');
    t.text('bodysite');
    t.text('collected');
    t.text('collector');
    t.specificType('container', 'text[]');
    t.text('containerId');
    t.specificType('parent', 'text[]');
    t.text('patient');
    t.text('status');
    t.text('subject');
    t.text('type');
  });

  await knex.schema.createTable('Specimen_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SpecimenDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('container');
    t.text('type');
  });

  await knex.schema.createTable('SpecimenDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('StructureDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('context', 'text[]');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('abstract');
    t.text('base');
    t.text('basePath');
    t.text('derivation');
    t.text('experimental');
    t.text('extContext');
    t.specificType('keyword', 'text[]');
    t.text('kind');
    t.text('path');
    t.text('type');
    t.text('valueset');
  });

  await knex.schema.createTable('StructureDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('StructureMap', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('StructureMap_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Subscription', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('contact', 'text[]');
    t.text('criteria');
    t.text('payload');
    t.text('status');
    t.text('type');
    t.text('url');
  });

  await knex.schema.createTable('Subscription_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Substance', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('category', 'text[]');
    t.text('code');
    t.text('containerIdentifier');
    t.text('expiry');
    t.text('quantity');
    t.text('status');
    t.text('substanceReference');
  });

  await knex.schema.createTable('Substance_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceNucleicAcid', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstanceNucleicAcid_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstancePolymer', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstancePolymer_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceProtein', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstanceProtein_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceReferenceInformation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstanceReferenceInformation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceSourceMaterial', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstanceSourceMaterial_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceSpecification', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('code', 'text[]');
  });

  await knex.schema.createTable('SubstanceSpecification_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SupplyDelivery', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.specificType('receiver', 'text[]');
    t.text('status');
    t.text('supplier');
  });

  await knex.schema.createTable('SupplyDelivery_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SupplyRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('date');
    t.text('category');
    t.text('requester');
    t.text('status');
    t.text('subject');
    t.specificType('supplier', 'text[]');
  });

  await knex.schema.createTable('SupplyRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Task', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('authoredOn');
    t.text('basedOn');
    t.text('businessStatus');
    t.text('code');
    t.text('encounter');
    t.text('focus');
    t.text('groupIdentifier');
    t.text('intent');
    t.text('modified');
    t.text('owner');
    t.text('partOf');
    t.text('patient');
    t.text('performer');
    t.text('period');
    t.text('priority');
    t.text('requester');
    t.text('status');
    t.text('subject');
  });

  await knex.schema.createTable('Task_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('TerminologyCapabilities', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('TerminologyCapabilities_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('TestReport', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('issued');
    t.specificType('participant', 'text[]');
    t.text('result');
    t.text('tester');
    t.text('testscript');
  });

  await knex.schema.createTable('TestReport_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('TestScript', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('testscriptCapability');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
  });

  await knex.schema.createTable('TestScript_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ValueSet', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('context');
    t.text('contextQuantity');
    t.text('contextType');
    t.text('date');
    t.text('description');
    t.specificType('jurisdiction', 'text[]');
    t.text('name');
    t.text('publisher');
    t.text('status');
    t.text('title');
    t.text('url');
    t.text('version');
    t.text('contextTypeQuantity');
    t.text('contextTypeValue');
    t.text('code');
    t.text('expansion');
    t.text('reference');
  });

  await knex.schema.createTable('ValueSet_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('VerificationResult', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('target', 'text[]');
  });

  await knex.schema.createTable('VerificationResult_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('VisionPrescription', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.text('patient');
    t.text('encounter');
    t.text('datewritten');
    t.text('prescriber');
    t.text('status');
  });

  await knex.schema.createTable('VisionPrescription_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Project', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('name');
  });

  await knex.schema.createTable('Project_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ClientApplication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('name');
  });

  await knex.schema.createTable('ClientApplication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('User', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('email');
  });

  await knex.schema.createTable('User_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Login', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.text('code');
    t.text('cookie');
  });

  await knex.schema.createTable('Login_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PasswordChangeRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('PasswordChangeRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('JsonWebKey', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
  });

  await knex.schema.createTable('JsonWebKey_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Address', t => {
    t.uuid('id').notNullable().primary();
    t.uuid('resourceId').notNullable().index();
    t.integer('index').notNullable();
    t.text('content').notNullable();
    t.text('address').index();
    t.text('city').index();
    t.text('country').index();
    t.text('postalCode').index();
    t.text('state').index();
    t.text('use').index();
  });

  await knex.schema.createTable('ContactPoint', t => {
    t.uuid('id').notNullable().primary();
    t.uuid('resourceId').notNullable().index();
    t.integer('index').notNullable();
    t.text('content').notNullable();
    t.text('system').index();
    t.text('value').index();
  });

  await knex.schema.createTable('Identifier', t => {
    t.uuid('id').notNullable().primary();
    t.uuid('resourceId').notNullable().index();
    t.integer('index').notNullable();
    t.text('content').notNullable();
    t.text('system').index();
    t.text('value').index();
  });

  await knex.schema.createTable('HumanName', t => {
    t.uuid('id').notNullable().primary();
    t.uuid('resourceId').notNullable().index();
    t.integer('index').notNullable();
    t.text('content').notNullable();
    t.text('name').index();
    t.text('given').index();
    t.text('family').index();
  });

  await knex.schema.createTable('ValueSetElement', t => {
    t.uuid('id').notNullable().primary();
    t.text('system').index();
    t.text('code').index();
    t.text('display').index();
  });
}

export async function down(knex) {
  await knex.schema.dropTable('Account');
  await knex.schema.dropTable('Account_History');
  await knex.schema.dropTable('ActivityDefinition');
  await knex.schema.dropTable('ActivityDefinition_History');
  await knex.schema.dropTable('AdverseEvent');
  await knex.schema.dropTable('AdverseEvent_History');
  await knex.schema.dropTable('AllergyIntolerance');
  await knex.schema.dropTable('AllergyIntolerance_History');
  await knex.schema.dropTable('Appointment');
  await knex.schema.dropTable('Appointment_History');
  await knex.schema.dropTable('AppointmentResponse');
  await knex.schema.dropTable('AppointmentResponse_History');
  await knex.schema.dropTable('AuditEvent');
  await knex.schema.dropTable('AuditEvent_History');
  await knex.schema.dropTable('Basic');
  await knex.schema.dropTable('Basic_History');
  await knex.schema.dropTable('Binary');
  await knex.schema.dropTable('Binary_History');
  await knex.schema.dropTable('BiologicallyDerivedProduct');
  await knex.schema.dropTable('BiologicallyDerivedProduct_History');
  await knex.schema.dropTable('BodyStructure');
  await knex.schema.dropTable('BodyStructure_History');
  await knex.schema.dropTable('Bundle');
  await knex.schema.dropTable('Bundle_History');
  await knex.schema.dropTable('CapabilityStatement');
  await knex.schema.dropTable('CapabilityStatement_History');
  await knex.schema.dropTable('CarePlan');
  await knex.schema.dropTable('CarePlan_History');
  await knex.schema.dropTable('CareTeam');
  await knex.schema.dropTable('CareTeam_History');
  await knex.schema.dropTable('CatalogEntry');
  await knex.schema.dropTable('CatalogEntry_History');
  await knex.schema.dropTable('ChargeItem');
  await knex.schema.dropTable('ChargeItem_History');
  await knex.schema.dropTable('ChargeItemDefinition');
  await knex.schema.dropTable('ChargeItemDefinition_History');
  await knex.schema.dropTable('Claim');
  await knex.schema.dropTable('Claim_History');
  await knex.schema.dropTable('ClaimResponse');
  await knex.schema.dropTable('ClaimResponse_History');
  await knex.schema.dropTable('ClinicalImpression');
  await knex.schema.dropTable('ClinicalImpression_History');
  await knex.schema.dropTable('CodeSystem');
  await knex.schema.dropTable('CodeSystem_History');
  await knex.schema.dropTable('Communication');
  await knex.schema.dropTable('Communication_History');
  await knex.schema.dropTable('CommunicationRequest');
  await knex.schema.dropTable('CommunicationRequest_History');
  await knex.schema.dropTable('CompartmentDefinition');
  await knex.schema.dropTable('CompartmentDefinition_History');
  await knex.schema.dropTable('Composition');
  await knex.schema.dropTable('Composition_History');
  await knex.schema.dropTable('ConceptMap');
  await knex.schema.dropTable('ConceptMap_History');
  await knex.schema.dropTable('Condition');
  await knex.schema.dropTable('Condition_History');
  await knex.schema.dropTable('Consent');
  await knex.schema.dropTable('Consent_History');
  await knex.schema.dropTable('Contract');
  await knex.schema.dropTable('Contract_History');
  await knex.schema.dropTable('Coverage');
  await knex.schema.dropTable('Coverage_History');
  await knex.schema.dropTable('CoverageEligibilityRequest');
  await knex.schema.dropTable('CoverageEligibilityRequest_History');
  await knex.schema.dropTable('CoverageEligibilityResponse');
  await knex.schema.dropTable('CoverageEligibilityResponse_History');
  await knex.schema.dropTable('DetectedIssue');
  await knex.schema.dropTable('DetectedIssue_History');
  await knex.schema.dropTable('Device');
  await knex.schema.dropTable('Device_History');
  await knex.schema.dropTable('DeviceDefinition');
  await knex.schema.dropTable('DeviceDefinition_History');
  await knex.schema.dropTable('DeviceMetric');
  await knex.schema.dropTable('DeviceMetric_History');
  await knex.schema.dropTable('DeviceRequest');
  await knex.schema.dropTable('DeviceRequest_History');
  await knex.schema.dropTable('DeviceUseStatement');
  await knex.schema.dropTable('DeviceUseStatement_History');
  await knex.schema.dropTable('DiagnosticReport');
  await knex.schema.dropTable('DiagnosticReport_History');
  await knex.schema.dropTable('DocumentManifest');
  await knex.schema.dropTable('DocumentManifest_History');
  await knex.schema.dropTable('DocumentReference');
  await knex.schema.dropTable('DocumentReference_History');
  await knex.schema.dropTable('EffectEvidenceSynthesis');
  await knex.schema.dropTable('EffectEvidenceSynthesis_History');
  await knex.schema.dropTable('Encounter');
  await knex.schema.dropTable('Encounter_History');
  await knex.schema.dropTable('Endpoint');
  await knex.schema.dropTable('Endpoint_History');
  await knex.schema.dropTable('EnrollmentRequest');
  await knex.schema.dropTable('EnrollmentRequest_History');
  await knex.schema.dropTable('EnrollmentResponse');
  await knex.schema.dropTable('EnrollmentResponse_History');
  await knex.schema.dropTable('EpisodeOfCare');
  await knex.schema.dropTable('EpisodeOfCare_History');
  await knex.schema.dropTable('EventDefinition');
  await knex.schema.dropTable('EventDefinition_History');
  await knex.schema.dropTable('Evidence');
  await knex.schema.dropTable('Evidence_History');
  await knex.schema.dropTable('EvidenceVariable');
  await knex.schema.dropTable('EvidenceVariable_History');
  await knex.schema.dropTable('ExampleScenario');
  await knex.schema.dropTable('ExampleScenario_History');
  await knex.schema.dropTable('ExplanationOfBenefit');
  await knex.schema.dropTable('ExplanationOfBenefit_History');
  await knex.schema.dropTable('FamilyMemberHistory');
  await knex.schema.dropTable('FamilyMemberHistory_History');
  await knex.schema.dropTable('Flag');
  await knex.schema.dropTable('Flag_History');
  await knex.schema.dropTable('Goal');
  await knex.schema.dropTable('Goal_History');
  await knex.schema.dropTable('GraphDefinition');
  await knex.schema.dropTable('GraphDefinition_History');
  await knex.schema.dropTable('Group');
  await knex.schema.dropTable('Group_History');
  await knex.schema.dropTable('GuidanceResponse');
  await knex.schema.dropTable('GuidanceResponse_History');
  await knex.schema.dropTable('HealthcareService');
  await knex.schema.dropTable('HealthcareService_History');
  await knex.schema.dropTable('ImagingStudy');
  await knex.schema.dropTable('ImagingStudy_History');
  await knex.schema.dropTable('Immunization');
  await knex.schema.dropTable('Immunization_History');
  await knex.schema.dropTable('ImmunizationEvaluation');
  await knex.schema.dropTable('ImmunizationEvaluation_History');
  await knex.schema.dropTable('ImmunizationRecommendation');
  await knex.schema.dropTable('ImmunizationRecommendation_History');
  await knex.schema.dropTable('ImplementationGuide');
  await knex.schema.dropTable('ImplementationGuide_History');
  await knex.schema.dropTable('InsurancePlan');
  await knex.schema.dropTable('InsurancePlan_History');
  await knex.schema.dropTable('Invoice');
  await knex.schema.dropTable('Invoice_History');
  await knex.schema.dropTable('Library');
  await knex.schema.dropTable('Library_History');
  await knex.schema.dropTable('Linkage');
  await knex.schema.dropTable('Linkage_History');
  await knex.schema.dropTable('List');
  await knex.schema.dropTable('List_History');
  await knex.schema.dropTable('Location');
  await knex.schema.dropTable('Location_History');
  await knex.schema.dropTable('Measure');
  await knex.schema.dropTable('Measure_History');
  await knex.schema.dropTable('MeasureReport');
  await knex.schema.dropTable('MeasureReport_History');
  await knex.schema.dropTable('Media');
  await knex.schema.dropTable('Media_History');
  await knex.schema.dropTable('Medication');
  await knex.schema.dropTable('Medication_History');
  await knex.schema.dropTable('MedicationAdministration');
  await knex.schema.dropTable('MedicationAdministration_History');
  await knex.schema.dropTable('MedicationDispense');
  await knex.schema.dropTable('MedicationDispense_History');
  await knex.schema.dropTable('MedicationKnowledge');
  await knex.schema.dropTable('MedicationKnowledge_History');
  await knex.schema.dropTable('MedicationRequest');
  await knex.schema.dropTable('MedicationRequest_History');
  await knex.schema.dropTable('MedicationStatement');
  await knex.schema.dropTable('MedicationStatement_History');
  await knex.schema.dropTable('MedicinalProduct');
  await knex.schema.dropTable('MedicinalProduct_History');
  await knex.schema.dropTable('MedicinalProductAuthorization');
  await knex.schema.dropTable('MedicinalProductAuthorization_History');
  await knex.schema.dropTable('MedicinalProductContraindication');
  await knex.schema.dropTable('MedicinalProductContraindication_History');
  await knex.schema.dropTable('MedicinalProductIndication');
  await knex.schema.dropTable('MedicinalProductIndication_History');
  await knex.schema.dropTable('MedicinalProductIngredient');
  await knex.schema.dropTable('MedicinalProductIngredient_History');
  await knex.schema.dropTable('MedicinalProductInteraction');
  await knex.schema.dropTable('MedicinalProductInteraction_History');
  await knex.schema.dropTable('MedicinalProductManufactured');
  await knex.schema.dropTable('MedicinalProductManufactured_History');
  await knex.schema.dropTable('MedicinalProductPackaged');
  await knex.schema.dropTable('MedicinalProductPackaged_History');
  await knex.schema.dropTable('MedicinalProductPharmaceutical');
  await knex.schema.dropTable('MedicinalProductPharmaceutical_History');
  await knex.schema.dropTable('MedicinalProductUndesirableEffect');
  await knex.schema.dropTable('MedicinalProductUndesirableEffect_History');
  await knex.schema.dropTable('MessageDefinition');
  await knex.schema.dropTable('MessageDefinition_History');
  await knex.schema.dropTable('MessageHeader');
  await knex.schema.dropTable('MessageHeader_History');
  await knex.schema.dropTable('MolecularSequence');
  await knex.schema.dropTable('MolecularSequence_History');
  await knex.schema.dropTable('NamingSystem');
  await knex.schema.dropTable('NamingSystem_History');
  await knex.schema.dropTable('NutritionOrder');
  await knex.schema.dropTable('NutritionOrder_History');
  await knex.schema.dropTable('Observation');
  await knex.schema.dropTable('Observation_History');
  await knex.schema.dropTable('ObservationDefinition');
  await knex.schema.dropTable('ObservationDefinition_History');
  await knex.schema.dropTable('OperationDefinition');
  await knex.schema.dropTable('OperationDefinition_History');
  await knex.schema.dropTable('OperationOutcome');
  await knex.schema.dropTable('OperationOutcome_History');
  await knex.schema.dropTable('Organization');
  await knex.schema.dropTable('Organization_History');
  await knex.schema.dropTable('OrganizationAffiliation');
  await knex.schema.dropTable('OrganizationAffiliation_History');
  await knex.schema.dropTable('Parameters');
  await knex.schema.dropTable('Parameters_History');
  await knex.schema.dropTable('Patient');
  await knex.schema.dropTable('Patient_History');
  await knex.schema.dropTable('PaymentNotice');
  await knex.schema.dropTable('PaymentNotice_History');
  await knex.schema.dropTable('PaymentReconciliation');
  await knex.schema.dropTable('PaymentReconciliation_History');
  await knex.schema.dropTable('Person');
  await knex.schema.dropTable('Person_History');
  await knex.schema.dropTable('PlanDefinition');
  await knex.schema.dropTable('PlanDefinition_History');
  await knex.schema.dropTable('Practitioner');
  await knex.schema.dropTable('Practitioner_History');
  await knex.schema.dropTable('PractitionerRole');
  await knex.schema.dropTable('PractitionerRole_History');
  await knex.schema.dropTable('Procedure');
  await knex.schema.dropTable('Procedure_History');
  await knex.schema.dropTable('Provenance');
  await knex.schema.dropTable('Provenance_History');
  await knex.schema.dropTable('Questionnaire');
  await knex.schema.dropTable('Questionnaire_History');
  await knex.schema.dropTable('QuestionnaireResponse');
  await knex.schema.dropTable('QuestionnaireResponse_History');
  await knex.schema.dropTable('RelatedPerson');
  await knex.schema.dropTable('RelatedPerson_History');
  await knex.schema.dropTable('RequestGroup');
  await knex.schema.dropTable('RequestGroup_History');
  await knex.schema.dropTable('ResearchDefinition');
  await knex.schema.dropTable('ResearchDefinition_History');
  await knex.schema.dropTable('ResearchElementDefinition');
  await knex.schema.dropTable('ResearchElementDefinition_History');
  await knex.schema.dropTable('ResearchStudy');
  await knex.schema.dropTable('ResearchStudy_History');
  await knex.schema.dropTable('ResearchSubject');
  await knex.schema.dropTable('ResearchSubject_History');
  await knex.schema.dropTable('RiskAssessment');
  await knex.schema.dropTable('RiskAssessment_History');
  await knex.schema.dropTable('RiskEvidenceSynthesis');
  await knex.schema.dropTable('RiskEvidenceSynthesis_History');
  await knex.schema.dropTable('Schedule');
  await knex.schema.dropTable('Schedule_History');
  await knex.schema.dropTable('SearchParameter');
  await knex.schema.dropTable('SearchParameter_History');
  await knex.schema.dropTable('ServiceRequest');
  await knex.schema.dropTable('ServiceRequest_History');
  await knex.schema.dropTable('Slot');
  await knex.schema.dropTable('Slot_History');
  await knex.schema.dropTable('Specimen');
  await knex.schema.dropTable('Specimen_History');
  await knex.schema.dropTable('SpecimenDefinition');
  await knex.schema.dropTable('SpecimenDefinition_History');
  await knex.schema.dropTable('StructureDefinition');
  await knex.schema.dropTable('StructureDefinition_History');
  await knex.schema.dropTable('StructureMap');
  await knex.schema.dropTable('StructureMap_History');
  await knex.schema.dropTable('Subscription');
  await knex.schema.dropTable('Subscription_History');
  await knex.schema.dropTable('Substance');
  await knex.schema.dropTable('Substance_History');
  await knex.schema.dropTable('SubstanceNucleicAcid');
  await knex.schema.dropTable('SubstanceNucleicAcid_History');
  await knex.schema.dropTable('SubstancePolymer');
  await knex.schema.dropTable('SubstancePolymer_History');
  await knex.schema.dropTable('SubstanceProtein');
  await knex.schema.dropTable('SubstanceProtein_History');
  await knex.schema.dropTable('SubstanceReferenceInformation');
  await knex.schema.dropTable('SubstanceReferenceInformation_History');
  await knex.schema.dropTable('SubstanceSourceMaterial');
  await knex.schema.dropTable('SubstanceSourceMaterial_History');
  await knex.schema.dropTable('SubstanceSpecification');
  await knex.schema.dropTable('SubstanceSpecification_History');
  await knex.schema.dropTable('SupplyDelivery');
  await knex.schema.dropTable('SupplyDelivery_History');
  await knex.schema.dropTable('SupplyRequest');
  await knex.schema.dropTable('SupplyRequest_History');
  await knex.schema.dropTable('Task');
  await knex.schema.dropTable('Task_History');
  await knex.schema.dropTable('TerminologyCapabilities');
  await knex.schema.dropTable('TerminologyCapabilities_History');
  await knex.schema.dropTable('TestReport');
  await knex.schema.dropTable('TestReport_History');
  await knex.schema.dropTable('TestScript');
  await knex.schema.dropTable('TestScript_History');
  await knex.schema.dropTable('ValueSet');
  await knex.schema.dropTable('ValueSet_History');
  await knex.schema.dropTable('VerificationResult');
  await knex.schema.dropTable('VerificationResult_History');
  await knex.schema.dropTable('VisionPrescription');
  await knex.schema.dropTable('VisionPrescription_History');
  await knex.schema.dropTable('Project');
  await knex.schema.dropTable('Project_History');
  await knex.schema.dropTable('ClientApplication');
  await knex.schema.dropTable('ClientApplication_History');
  await knex.schema.dropTable('User');
  await knex.schema.dropTable('User_History');
  await knex.schema.dropTable('Login');
  await knex.schema.dropTable('Login_History');
  await knex.schema.dropTable('PasswordChangeRequest');
  await knex.schema.dropTable('PasswordChangeRequest_History');
  await knex.schema.dropTable('JsonWebKey');
  await knex.schema.dropTable('JsonWebKey_History');
  await knex.schema.dropTable('Identifier');
}
